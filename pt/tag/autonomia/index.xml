<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Autonomia | Felipe Sodré M. Barros</title>
    <link>/pt/tag/autonomia/</link>
      <atom:link href="/pt/tag/autonomia/index.xml" rel="self" type="application/rss+xml" />
    <description>Autonomia</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>pt-br</language><lastBuildDate>Fri, 15 Apr 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_huf522d53bb96c01347942c9c8d4a9566b_18603_512x512_fill_lanczos_center_2.png</url>
      <title>Autonomia</title>
      <link>/pt/tag/autonomia/</link>
    </image>
    
    <item>
      <title>Bug buster</title>
      <link>/pt/post/bug-buster/</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      <guid>/pt/post/bug-buster/</guid>
      <description>&lt;h3 id=&#34;como-tudo-começou&#34;&gt;Como tudo começou:&lt;/h3&gt;
&lt;p&gt;Estou trabalhando num projeto onde uma das funções do python é executada e recebe um um parâmtero pelo terminal. Um detalhe é que esse parâmetro é o nome de uma pessoa. Um ponto que não previ no processo de desenvolvimento é que nomes, como qualquer outro elemento textual da lingua portuguesa, podem ter acentos (ou &amp;ldquo;caracteres especiais&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;Pois é, foi pratimente sem querer que vi, olhando os logs produzidos, que os nomes com acento estavam com problema de &lt;code&gt;encoding&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;E assim começou a minha caça ao bug. Uma caça que me tomou um dia e meio. Mas foi de grande aprendizado.&lt;/p&gt;
&lt;h3 id=&#34;um-pouco-do-contexto&#34;&gt;Um pouco do contexto:&lt;/h3&gt;
&lt;p&gt;Antes de descrever essa aventura, comento um pouco o fluxo do programa que apresentou erro:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Uma função é executada pelo terminal e recebe um parâmtero, que é o nome de uma pessoa;&lt;/li&gt;
&lt;li&gt;Esse nome é usado para instanciar um objeto. Logo no &lt;code&gt;__init__&lt;/code&gt; tenho o ponto de acesso ao que foi informado pelo terminal com a incorporação do mesmo como atributo da instância.&lt;/li&gt;
&lt;li&gt;Alguns processamnetos, que não vem ao caso, são realizados;&lt;/li&gt;
&lt;li&gt;O log do processamento realizado é persistirdo numa base de dados usando o &lt;code&gt;SQLAlchemy&lt;/code&gt;, onde a tabela que o recebe possui um campo id e outro json, com os logs organizados em tal formato.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;e-agora-por-onde-começar&#34;&gt;E agora? Por onde começar?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Buscando o bug no terminal&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Como o parâmetro estava sendo passado por terminal, achei que o problema estava nesse ponto: no terminal. Primeiro passo: checar o encoding usado pelo sistema. Mas logo vi que estava tudo em &lt;code&gt;utf-8&lt;/code&gt;, o que por sí, não deveria apresentar problema.&lt;/p&gt;
&lt;p&gt;Como o nome estava sendo passado como um parâmetro do sistema a partir de uma variável, aproveitei para checar se o erro não estava aí. Nada que um print e alguns testes no terminal não resolva.  E nada, os nomes armazenados na variáve e passados como parâmetro não sofriam qualquer alteração neste processo inicial.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Interseção terminal/python&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Achei, então que o erro estava em alguma incompatibilidade entre o que era passado no terminal e o como o python estava recebendo.&lt;/p&gt;
&lt;p&gt;Segundo passo, então, foi checar o ponto de contato entre terminal e o python. Ler o seguinte trecho, de uma resposta do &lt;em&gt;stackOverFlow&lt;/em&gt; me deu a certeza de que era aí o erro:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When Python does not detect that it is printing to a terminal, sys.stdout.encoding is set to None.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ou seja, quando o python não pode detectar o que está sendo apresentado ao terminal o &lt;code&gt;sys.stdout.encoding&lt;/code&gt; é definido como &lt;code&gt;None&lt;/code&gt;; Ora, estou passando um parametro a partir de uma variável do terminal, logo um string. O Python não consegue identificar o encoding dessa string e está definindo, então o encoding a None, o que deve estar gerando o erro.&lt;/p&gt;
&lt;p&gt;Tentando resolver isso, busquei alguma forma de declarar o encoding&amp;hellip; Cheguei a adicionar ao &lt;code&gt;__init__&lt;/code&gt;, quando a classe é instanciada e recebe o nome da pessoa os métodos, &lt;code&gt;.encode().decode(&#39;utf-8&#39;)&lt;/code&gt; ao objeto que recebe o valor. Parecia que ia funcionar, vejam:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nome = &#39;Felipe Sodré&#39;
b&#39;Felipe Sodr\xc3\xa9&#39;
# e ao adicionar o decode o texto volta ao normal...
nome.encode().decode(&#39;utf-8&#39;)
&#39;Felipe Sodré&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;ldquo;Meio&amp;rdquo; gambiarra, não? Mas o importante é se funcionar.&lt;/p&gt;
&lt;p&gt;Contudo, o que parecia a solução, foi logo por agua abaixo na primeira rodada de teste. O nome continua com erro de encoding.&lt;/p&gt;
&lt;p&gt;Decidí, então, usar o módulo &lt;code&gt;logging&lt;/code&gt; para apresentar o nome recebido pelo terminal e nome após a classe estar instanciada durante o processamento. Aliás, o &lt;a href=&#34;https://twitter.com/dunossauro&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@dunosauro&lt;/a&gt; apresentou &lt;a href=&#34;https://www.youtube.com/watch?v=PGAOqAWuwC0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;uma live&lt;/a&gt; muito boa sobre o uso do &lt;code&gt;logging&lt;/code&gt;&amp;hellip;&lt;/p&gt;
&lt;p&gt;Bom, ao usar o &lt;code&gt;logging&lt;/code&gt; tive certeza de que estava tentando resolver o erro no ponto errado, todas as mensagens de log estavam sem o tal erro de encoding, mas no log persistido no banco de dados seguia com o maldito erro&amp;hellip;&lt;/p&gt;
&lt;p&gt;Será que o banco de dados está configurado com uma encoding diferente?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;No banco de dados&amp;hellip;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;✔️ Banco configurado como &amp;lsquo;utf-8&amp;rsquo;;&lt;/p&gt;
&lt;p&gt;Até que me veio uma luz: nas mensagens de log o nome está sem erro. Mas o log que está sendo persistido no banco de dados ( que são algumas dessas mensagens filtradas para monitorar alguns pontos importantes do sistema) é uma compilação salva em um campo JSON.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Bom deve ser nesse ponto, então.&amp;rdquo;, pensei.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reproduzindo o erro em &lt;code&gt;JSON&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Parti então para tentar reproduzir esse erro:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;import json
&amp;gt;&amp;gt;&amp;gt;info = {&#39;nome&#39;:&#39;Felipe Sodré&#39;, &#39;idade&#39;:38}
&amp;gt;&amp;gt;&amp;gt;info
{&#39;nome&#39;: &#39;Felipe Sodré&#39;, &#39;idade&#39;: 28}
&amp;gt;&amp;gt;&amp;gt;json.dumps(info)
&#39;{&amp;quot;nome&amp;quot;: &amp;quot;Felipe Sodr\xc3\xa9&amp;quot;, &amp;quot;idade&amp;quot;: 38}&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pronto! Aí está o problema. No processo de conversão do dicionário ao JSON, há algum tipo de conversão que gera o erro de encoding.&lt;/p&gt;
&lt;p&gt;Não levei &amp;ldquo;muito tempo&amp;rdquo; (tempo é relativo, né?) para encontrar que o método &lt;a href=&#34;https://docs.python.org/3/library/json.html#json.dumps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;dumps()&lt;/code&gt;&lt;/a&gt; possui o parâmetro &lt;code&gt;ensure_ascii&lt;/code&gt;, com valor padrão &lt;code&gt;True&lt;/code&gt;, que garante que as &lt;code&gt;strings&lt;/code&gt; do JSON que possuam caracteres não-ASCII estejam com &lt;code&gt;scape&lt;/code&gt;.:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If ensure_ascii is true (the default), the output is guaranteed to have all incoming non-ASCII characters escaped. If ensure_ascii is false, these characters will be output as-is.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Testei usando o &lt;code&gt;dumps()&lt;/code&gt; com &lt;code&gt;ensur_ascii=False&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;json.dumps(info, ensure_ascii=False)
&#39;{&amp;quot;nome&amp;quot;: &amp;quot;Flávia Duarte Nascimento&amp;quot;, &amp;quot;idade&amp;quot;: 12}&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pronto, ponto de erro encontrado. Basta adicionar o parâmetro apra False e tudo se resolveria.&lt;/p&gt;
&lt;p&gt;Mas não foi bem assim, ainda faltava um ponto. Eu não estava gerando o dump e salvando no banco. O que estou fazendo é passar o dado, ainda em dicionário, para o banco usando o &lt;em&gt;SQLAlchemy&lt;/em&gt; e ele cuida disso para mim.&lt;/p&gt;
&lt;p&gt;Como, ou melhor, onde, então, eu devo informar esse &lt;code&gt;ensure_ascii&lt;/code&gt;?&lt;/p&gt;
&lt;h3 id=&#34;enfim-a-solução&#34;&gt;Enfim, a solução:&lt;/h3&gt;
&lt;p&gt;Foi lendo &lt;a href=&#34;https://stackoverflow.com/a/36438671&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;essa responta no SOF&lt;/a&gt; que entendí que como o ORM &lt;em&gt;SQLAlchemy&lt;/em&gt; está cuidadno disso para mim, ele possui um serializador e que o mesmo é, nada mais, nada menos que os métodos &lt;code&gt;jason.dumps()&lt;/code&gt; e &lt;code&gt;json.loads()&lt;/code&gt;, passados na função &lt;a href=&#34;https://docs.sqlalchemy.org/en/14/core/engines.html#sqlalchemy.create_engine&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;create_engine&lt;/code&gt;&lt;/a&gt; como um &lt;em&gt;kwargs&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;engine = create_engine(..., json_serializer=dumps)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;O golpe final foi ao ler a docuementação do  SQLAlchemy sobre &lt;a href=&#34;https://docs.sqlalchemy.org/en/14/core/type_basics.html#sqlalchemy.types.JSON&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;o tipo de dado JSON&lt;/a&gt; e aprender que podemos customizar o serializador. Olha só o exemplo da documentação, me dando de &amp;ldquo;bandeja&amp;rdquo; a solução para o bug em questão:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;engine = create_engine(
    &amp;quot;sqlite://&amp;quot;,
    json_serializer=lambda obj: json.dumps(obj, ensure_ascii=False))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Agora sim, vida que segue, graças à persistẽncia e perseverança na caça aos bugs.&lt;/p&gt;
&lt;p&gt;Ah, claro. Essa investigação contou com a ajuda de outros colegas que dedicaram alguns minutos para conversar e propor soluções, tabém. Muito obrigado!&lt;/p&gt;
&lt;p&gt;E vocês, que estratégias adotam na caça aos bugs?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hacktoberfest 2021</title>
      <link>/pt/post/hacktoberfest-2021/</link>
      <pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate>
      <guid>/pt/post/hacktoberfest-2021/</guid>
      <description>&lt;h1 id=&#34;hacktoberfest-colaborações-e-aprendizados&#34;&gt;Hacktoberfest: Colaborações e aprendizados&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Artigo publicado também no &lt;a href=&#34;https://www.linkedin.com/pulse/hacktoberfest-colabora%C3%A7%C3%B5es-e-aprendizados-felipe-sodr%C3%A9-mendes-barros/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;linkedin&lt;/strong&gt;&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hacktoberfest.digitalocean.com/_nuxt/img/logo-hacktoberfest-full.f42e3b1.svg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;O &lt;a href=&#34;https://hacktoberfest.digitalocean.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HacktoberFest&lt;/a&gt; é um evento promovido pela Digital Ocean durante o mês de outubro e já está na sua oitava edição. O objetivo é incentivar a colaboração em projetos de código aberto e, claro, como uma forma de democratizar o conhecimento em sistemas de versionamento, como o &lt;a href=&#34;https://git-scm.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;git&lt;/a&gt;, além de outras tecnologias.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;hellip;Ah, e o incentivo vem com a possibilidade de ganhar uma camisa do evento ao ter aprovado quatro &lt;a href=&#34;https://git-scm.com/docs/git-request-pull&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;pull requests&lt;/em&gt;&lt;/a&gt; em repositórios participantes (para participar, basta adicionar a tag &amp;ldquo;Hactoberfest&amp;rdquo; ao repositório ou adicionar a tag &amp;ldquo;Hacktoberfest-accepted&amp;rdquo; no &lt;em&gt;Pull request&lt;/em&gt; em questão).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Não foi minha primeira participação, mas foi a primeira vez que pude colaborar em projetos diferentes daqueles relacionados ao meu trabalho cotidiano. E já fazia algum tempo que tinha interesse em colaborar, mas não sabia como quebrar a inércia. Compartilho neste artigo, alguns projetos desenvolvidos este ano e o que pude aprender nos mesmos.&lt;/p&gt;
&lt;h3 id=&#34;fogo-cruzado&#34;&gt;Fogo Cruzado&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://fogocruzado.org.br/wp-content/uploads/2019/05/logo_fogo_cruzado_v2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;O projeto &lt;a href=&#34;https://fogocruzado.org.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fogo Cruzado&lt;/a&gt; foi desenvolvido pela &lt;a href=&#34;https://voltdata.info/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Volt Data Lab&lt;/a&gt; e &lt;a href=&#34;https://twitter.com/fogocruzado&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Instituto Fogo Cruzado&lt;/a&gt;, como um sistema &lt;a href=&#34;https://pt.wikipedia.org/wiki/Crowdsourcing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Crowdsourcing&lt;/a&gt; para monitoramento dos tiroteios no Rio de Janeiro e/ou em Recife. &lt;a href=&#34;https://fogocruzado.org.br/sobre-a-api/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;O mesmo disponibiliza uma API&lt;/a&gt; para acessar aos dados, bastando criar um usuário, sem custo. E o projeto já tem um pacote para acessar os dados pelo &lt;a href=&#34;https://github.com/voltdatalab/crossfire&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Como faltava um módulo python para acessar os dados do projeto, decidi fazê-lo durante o #Hacktoberfest. Esse foi o primeiro projeto: um módulo python para acessar os dados da API, direto do python.&lt;/p&gt;
&lt;p&gt;Foi um desafio legal e, até certa forma, simples, pois eu já tinha um modelo de como funcionava o pacote em R. Então o trabalho foi, principalmente &amp;ldquo;traduzir&amp;rdquo; ao python. Com isso aproveitei para refatorar algumas partes do código.&lt;/p&gt;
&lt;p&gt;No geral, posso dizer que ao desenvolver esse projeto, aprendi sobre:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python-poetry (do zero);&lt;/li&gt;
&lt;li&gt;Validação de login usando variáveis do sistema;&lt;/li&gt;
&lt;li&gt;Publicação de módulos no PyPi;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;E fica como desafios para melhor/implementar em breve:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Melhorar o código com &lt;code&gt;type annotation&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Criação de documentação com &lt;code&gt;Sphynx&lt;/code&gt; (se alguém quiser sugerir outra alternativa será bem-vinda);&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pyinaturalist-convert&#34;&gt;PyInaturalist-convert&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/niconoe/pyinaturalist/main/docs/images/pyinaturalist_logo_med.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;O segundo projeto que atuei nesse mês foi no &lt;a href=&#34;https://github.com/JWCook/pyinaturalist-convert&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PyInaturalist-convert&lt;/a&gt;. A história deste módulo é bem interessante e surge de uma demanda pessoal: O &lt;a href=&#34;https://imibio.misiones.gob.ar/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IMiBio&lt;/a&gt;, Instituição onde trabalho, está desenvolvendo um projeto com o &lt;a href=&#34;https://www.inaturalist.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;INaturalist&lt;/a&gt;, uma aplicação de &lt;a href=&#34;https://pt.wikipedia.org/wiki/Crowdsourcing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;crowdsourcing&lt;/a&gt; para observação de biodiversidade, e eu tive que criar um sistema que acesse os dados do projeto usando a &lt;a href=&#34;https://github.com/inaturalist/iNaturalistAPI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;API deles&lt;/a&gt;. Com isso, conheci o módulo &lt;a href=&#34;https://github.com/niconoe/pyinaturalist&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PyINaturalist&lt;/a&gt;. Conversando com os desenvolvedores, comentei que seria interessante ter os dados no padrão &lt;a href=&#34;https://dwc.tdwg.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;darwincore&lt;/a&gt;. Um deles achou pertinente e começamos a desenvolver juntos. Contudo, fiquei uns bons meses afastado do projeto e ao voltar, já era um pacote bem estruturado. Por isso, para entender a estrutura do mesmo e saber por onde começar, além de ler as &lt;a href=&#34;https://guides.github.com/features/issues/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issues&lt;/a&gt; abertas, adotei a estratégia de ler os testes&amp;hellip;&lt;/p&gt;
&lt;p&gt;&amp;hellip; E foi lendo os testes que percebi que estavam implementando um objeto geojson, &amp;ldquo;na unha&amp;rdquo;. Como estive estudando sobre o &lt;a href=&#34;https://pypi.org/project/geojson/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;geojson&lt;/code&gt;&lt;/a&gt; (e, inclusive foi &lt;a href=&#34;https://felipesbarros.github.io/post/criando-um-sistema-para-gestao-de-dados-geograficos-de-forma-simples-e-robusta-ii/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;um dos temas explorados por mim em outros artigos&lt;/a&gt;, propus usá-lo. Com isso, poderíamos usar os métodos de validação já implementados no módulo, garantindo consistência aos dados;&lt;/p&gt;
&lt;p&gt;Ao colaborar no módulo &lt;code&gt;PyInaturalist-converter&lt;/code&gt;, aprendi sobre:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Como colaborar a um projeto já estruturado. Tenho certeza que essa não é uma regra. Mas foi uma boa estratégia começar lendo os testes;&lt;/li&gt;
&lt;li&gt;Mais aprendizados sobre python-poetry :);&lt;/li&gt;
&lt;li&gt;Soube da existência do formatador de código [Black](The Uncompromising Code Formatter);&lt;/li&gt;
&lt;li&gt;Soube da existencia do &lt;a href=&#34;https://pycqa.github.io/isort/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ISORT&lt;/a&gt;, para padronizar os imports;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Além desses aprendizados, o autor principal do módulo já tinha configurado no repositório um &lt;a href=&#34;https://docs.github.com/pt/actions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fluxo de ações&lt;/a&gt; e validações bem interessantes. Dessa forma, havia um sistema de validação do que se estava propondo como &lt;a href=&#34;https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;pull request&lt;/code&gt;&lt;/a&gt;. Ainda não tive tempo de me aprofundar, mas já está na lista de estudos futuros&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;análise-espacial-no-frontend&#34;&gt;Análise espacial no &lt;em&gt;frontend&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Uma última atividade que queria compartilhar, não está relacionada a uma contribuição minha, mas sim, um projeto ao qual eu recebi ajuda.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/an%C3%A1lise-espacial-frontend-felipe-sodr%C3%A9-mendes-barros?trk=public_post-content_share-article&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Publiquei recentemente&lt;/a&gt; um artigo apresentando alguns módulos de JavaScript que nos permitem fazer algumas análises espaciais sem depender de uma infraestrutura de servidores de dados e de mapas.&lt;/p&gt;
&lt;p&gt;Eu fui apresentado a essas tecnologias no &lt;a href=&#34;https://2021.foss4g.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FOSS4G 2021&lt;/a&gt; e por pura curiosidade, já que frontend não é a &amp;ldquo;minha praia&amp;rdquo;, comecei a fazer alguns testes como estratégia de estudos, mesmo.&lt;/p&gt;
&lt;p&gt;Pude evoluir bastante com os estudos, mas num momento vi que poderia ser feito muito mais, mas que eu não tinha conhecimento técnico em JS para isso. Não tive dúvidas em contactar um amigo que trabalha com JS e apresentei a ele o que estava tentando fazer. Ele curtiu e acabou colaborando com o projeto, transformando essa prova de conceito numa solução, em algo realmente interessante.&lt;/p&gt;
&lt;p&gt;Percebam que essa colaboração não surgiu pelo Hacktoberfest. Mas por uma mudança de postura minha em me conectar com outras pessoas e apresentar o que eu estava estudando, as &amp;ldquo;minhas dores&amp;rdquo; e o que pretendia fazer.&lt;/p&gt;
&lt;p&gt;Neste projeto estudei e aprendi sobre:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;O &lt;a href=&#34;https://github.com/geotiff/georaster&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;georaster&lt;/code&gt;&lt;/a&gt;, uma biblioteca JavaScript que nos permite carrregar, e até mesmo criar, dados raster a partir de objetos JavaScript;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/GeoTIFF/georaster-layer-for-leaflet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;georaster-layer-for-leaflet&lt;/code&gt;&lt;/a&gt; que é uma biblioteca que nos permite apresentar dados &lt;code&gt;raster&lt;/code&gt; (a princípio geotif) nos mapas feitos em &lt;a href=&#34;https://leafletjs.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;leaflet&lt;/code&gt;&lt;/a&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://geoblaze.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;geoblaze&lt;/code&gt;&lt;/a&gt; que é um pacote desenvolvido em JavaScript para permitir analisar dados carregados como georaster.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Como resultado, criamos dois visualizadores de dados &lt;em&gt;raster&lt;/em&gt; apenas com tecnologia &lt;em&gt;frontend&lt;/em&gt;. &lt;a href=&#34;https://felipesbarros.github.io/geoblaze_test/clicking_pixel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;No primeiro o usuário interage com o pixel&lt;/a&gt; (clicando num píxel específico) e o gráfico apresenta o comportamento temporal daquele pixel; &lt;a href=&#34;https://felipesbarros.github.io/geoblaze_test/clicking_polygon&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;No segundo visualizador&lt;/a&gt; o usuário clica em um dos estados e o gráfico apresenta o valor médio dos pixels daquele estado ao longo do tempo.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;notas-finais-sobre-hacktoberfest&#34;&gt;Notas finais sobre Hacktoberfest&lt;/h2&gt;
&lt;p&gt;Entendo que muitos &amp;ldquo;torcem o nariz&amp;rdquo; para o Hacktoberfest, pois poucos o utilizam como uma estratégia de estudos, crescimento ou colaboração a projeto de código aberto, que são os objetivos principais. A ideia de escrever sobre as colaborações feitas é justamente destacar que o evento é uma grande estratégia/ferramenta para aprender mais, conectar-se com outros desenvolvedores e se engajar em projetos de código aberto.&lt;/p&gt;
&lt;p&gt;Espero que os meus aprendizados serviam de motivação aos demais. Qualquer coisa, fico à disposição para conversar mais a respeito.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Artigo publicado também no &lt;a href=&#34;https://www.linkedin.com/pulse/hacktoberfest-colabora%C3%A7%C3%B5es-e-aprendizados-felipe-sodr%C3%A9-mendes-barros/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;linkedin&lt;/strong&gt;&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Análise espacial no frontend</title>
      <link>/pt/post/analise-espacial-frontend/</link>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
      <guid>/pt/post/analise-espacial-frontend/</guid>
      <description>&lt;h1 id=&#34;criando-um-sistema-para-gestão-de-dados-geográficos-de-forma-simples-e-robusta&#34;&gt;Criando um sistema para gestão de dados geográficos de forma simples e robusta&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Artigo publicado também no &lt;a href=&#34;https://www.linkedin.com/pulse/an%C3%A1lise-espacial-frontend-felipe-sodr%C3%A9-mendes-barros/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;linkedin&lt;/strong&gt;&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Este ano pude participar do projeto de jornalismo de dados &lt;a href=&#34;https://infoamazonia.org/project/engolindo-fumaca/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Engolindo Fumaça&lt;/a&gt;, desenvolvido pelo &lt;a href=&#34;https://infoamazonia.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;InfoAmazonia&lt;/a&gt;. Foi um projeto bem desafiador que me trouxe vários aprendizados. Muitos deles já viraram artigos, como os de &lt;a href=&#34;https://felipesbarros.github.io/pt/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cubo de dados&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ainda que o projeto tenha sido um sucesso (inclusive, foi um dos finalistas do &lt;a href=&#34;https://premio.jornalismodedados.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;prêmio de jornalismo de dados Cláudio Weber Abramo&lt;/a&gt; ) alguns desafios ficaram pendentes. Um deles está com a possibilidade de apresentar dados raster em um sistema webmap, sem dispor de grande infraestrutura de SIG, como base de dados e servidor de mapas, PostGIS e geoserver, respectivamente. Afinal, após todo o processo de análise de dados e produção das matérias, era importante apresentar os dados de forma interativa.&lt;/p&gt;
&lt;p&gt;Aliás, desenvolvimento de soluções com dados espaciais com infraestrutura limitada tem sido um tema explorado por mim em &lt;a href=&#34;https://felipesbarros.github.io/pt/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;alguns artigos&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Então, em resumo, a necessidade era: apresentar as imagens de satélite utilizadas nas reportagens em um mapa dinâmico, sem depender de um servidor de mapas, para que os leitores da matéria pudessem explorar os dados. Algo similar a um &lt;em&gt;dashboard&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Pois foi ao moderar uma sessão da conferência &lt;a href=&#34;https://2021.foss4g.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Free and Open Source Software for Geospatial&lt;/a&gt; (#FOSS4G) deste ano que, sem querer, me deparei com as possíveis soluções. A solução seria transportar a responsabilidade de carregar, apresentar e calcular algumas estatísticas ao &lt;em&gt;frontend&lt;/em&gt;, usando o conjunto de bibliotecas &lt;a href=&#34;https://github.com/geotiff/georaster&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;georaster&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/GeoTIFF/georaster-layer-for-leaflet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;georaster-layer-for-leaflet&lt;/code&gt;&lt;/a&gt; e &lt;a href=&#34;https://geoblaze.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;geoblaze&lt;/code&gt;&lt;/a&gt;. A apresentação que me dispertou para essas ferramentas foi feita pelo &lt;a href=&#34;https://www.linkedin.com/in/danieljdufour&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Daniel Dufour&lt;/a&gt; sobre o &lt;a href=&#34;https://geoblaze.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;geoblaze&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/geotiff/georaster&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;georaster&lt;/code&gt;&lt;/a&gt; é uma biblioteca JavaScript que nos permite carrregar, e até mesmo criar, dados raster a partir de objetos JavaScript;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/GeoTIFF/georaster-layer-for-leaflet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;georaster-layer-for-leaflet&lt;/code&gt;&lt;/a&gt; é uma biblioteca que nos permite apresentar dados &lt;code&gt;raster&lt;/code&gt; (a princípio geotif) nos mapas feitos em &lt;a href=&#34;https://leafletjs.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;leaflet&lt;/code&gt;&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://geoblaze.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;geoblaze&lt;/code&gt;&lt;/a&gt; é um pacote desenvolvido em JavaScript para permitir analisar dados carregados como georaster.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dessa forma, com essa stack the bibliotecas poderemos carregar uma imagem raster georreferenciada, extrair estatísticas gerais e espaciais, bem como aplicar alguns processamentos, como algebra de bandas e apresentá-las em um webmap &lt;code&gt;leaflet&lt;/code&gt;. Tudo isso sem depender de uma infraestrutura de &lt;em&gt;backend&lt;/em&gt;. Tudo sendo processado no &lt;em&gt;frontend&lt;/em&gt;. Sim, essa solução pode ser limitada para alguns casos. Mas nem todos.&lt;/p&gt;
&lt;p&gt;E, por isso, decidi explorar essa alternativa, ainda que &lt;em&gt;frontend&lt;/em&gt; (e JavaScript) não seja a &amp;ldquo;minha praia&amp;rdquo;. A verdade é que não consegui conter o entusiasmo e parti para uma prova conceitual. &lt;a href=&#34;https://observablehq.com/@felipesbarros/proof_of_concept_geoblaze&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Compartilho a prova de conceito que fiz&lt;/a&gt;, usando o &lt;a href=&#34;https://observablehq.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;observablehq&lt;/a&gt; (uma espécie de &lt;em&gt;jupyter-notebook&lt;/em&gt; para programação &lt;em&gt;frontend&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Aproveitei para consolidar o resultado em uma &lt;em&gt;landingpage&lt;/em&gt;. Nela, além de apresentar o raster, foi possível garantir que o usuário possa interagir com o mesmo, de duas formas distintas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clicando em um &lt;em&gt;pixel&lt;/em&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://felipesbarros.github.io/geoblaze_test/img/landingpage.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ou clicando em um dos polígonos que representam os limites dos estados que compõem a Amazônia Legal. (⚠️ não estamos representando o estado do Maranhão já que o mesmo não é contemplado integramente na Amazônia Legal);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://felipesbarros.github.io/geoblaze_test/img/landingpage_polygon.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Em ambas implementações os valores dos pixels são extraídos &lt;a href=&#34;https://pt.wikipedia.org/wiki/Just_in_time&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;just-in-time&lt;/em&gt;&lt;/a&gt; e o gráfico em &lt;a href=&#34;https://plotly.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;plotly&lt;/a&gt; é atualizado representando o comportamento temporal dos mesmos. Tais dados se referem a &lt;a href=&#34;https://pt.wikipedia.org/wiki/Material_particulado&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Material Particulado &amp;lt; 2.5&lt;/a&gt; do ano de 2020. No gráfico, apresentamos, ainda, o valor máximo sugerido pela Organização Mundial da Saúde (&lt;strong&gt;World Health Organization - WHO&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;Essas duas implementações visam explorar oportunidades diferentes das ferramentas em questão. Separamos os resultados em duas páginas diferentes: &lt;a href=&#34;https://felipesbarros.github.io/geoblaze_test/clicking_pixel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;clicando pixel a pixel&lt;/a&gt;; &lt;a href=&#34;https://felipesbarros.github.io/geoblaze_test/clicking_polygon&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;clicando num polígono&lt;/a&gt;;&lt;/p&gt;
&lt;p&gt;E, é lógico: tenho tudo documentado no &lt;a href=&#34;https://github.com/felipesbarros/geoblaze_test/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Não posso deixar de mencionar que o projeto só foi possível com a ajuda do &lt;a href=&#34;https://kylefelipe.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kyle Felipe&lt;/a&gt; quem, inclusive, foi o responsável pela evolução do projeto implementando a solução em JS baseada na seleção de polígonos.&lt;/p&gt;
&lt;p&gt;Espero que seja útil :)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Artigo publicado também no &lt;a href=&#34;https://www.linkedin.com/pulse/an%C3%A1lise-espacial-frontend-felipe-sodr%C3%A9-mendes-barros/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;linkedin&lt;/strong&gt;&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cientista de dados geográficos - Como cheguei até aqui?!</title>
      <link>/pt/post/cientista-dados-geograficos-como-cheguei-aqui/</link>
      <pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate>
      <guid>/pt/post/cientista-dados-geograficos-como-cheguei-aqui/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
